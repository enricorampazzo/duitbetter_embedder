plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ai.getuseful.duitbetter'
version = '0.0.1-SNAPSHOT'
var profile = java.util.Optional.ofNullable(System.getenv('SPRING_PROFILES_ACTIVE')).orElse('default')
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.ai:spring-ai-neo4j-store-spring-boot-starter'
	if(profile == "default") {
		implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
	}
	if(profile == 'openai' || profile == 'dockerOpenAI') {
		implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	}
	implementation 'org.springframework.boot:spring-boot-starter-web:3.3.4'
	implementation 'io.github.wimdeblauwe:htmx-spring-boot:3.5.1'
	implementation 'io.github.wimdeblauwe:htmx-spring-boot-thymeleaf:3.5.1'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.4'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.4'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.named('bootBuildImage'){
	dependsOn = ['setEnvForDockerBuild']
	tags = ['edwardcondon/embedder:0.0.1-SNAPSHOT']
}
tasks.register('setEnvForDockerBuild'){
	profile = 'dockerOpenAI'
	doLast {
		println 'set profile as ' + profile
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
